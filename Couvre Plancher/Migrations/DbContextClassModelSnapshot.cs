// <auto-generated />
using System;
using Couvre_Plancher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Couvre_Plancher.Migrations
{
    [DbContext(typeof(DbContextClass))]
    partial class DbContextClassModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Couvre_Plancher.Models.CouvrePlanche", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("couvrePlanches");
                });

            modelBuilder.Entity("Couvre_Plancher.Models.Materiel", b =>
                {
                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CouvrePlancheId")
                        .HasColumnType("int");

                    b.Property<float>("PrixMainOeuvre")
                        .HasColumnType("real");

                    b.Property<float>("PrixParMetre")
                        .HasColumnType("real");

                    b.HasKey("Nom");

                    b.HasIndex("CouvrePlancheId");

                    b.ToTable("Materiel");
                });

            modelBuilder.Entity("Couvre_Plancher.Models.Superviseur", b =>
                {
                    b.Property<string>("Cin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Adresse")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("DateNaissance")
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumTelephone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Cin");

                    b.ToTable("superviseurs");
                });

            modelBuilder.Entity("Couvre_Plancher.Models.Materiel", b =>
                {
                    b.HasOne("Couvre_Plancher.Models.CouvrePlanche", null)
                        .WithMany("Materiels")
                        .HasForeignKey("CouvrePlancheId");
                });

            modelBuilder.Entity("Couvre_Plancher.Models.CouvrePlanche", b =>
                {
                    b.Navigation("Materiels");
                });
#pragma warning restore 612, 618
        }
    }
}
